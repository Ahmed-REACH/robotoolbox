% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/var_group.R
\name{var_group}
\alias{var_group}
\alias{var_group<-}
\alias{set_variables_group}
\title{Get / Set a variable group}
\usage{
var_group(x)

var_group(x) <- value

set_variables_group(.data, ..., .groups = NA, .strict = TRUE)
}
\arguments{
\item{x}{a vector or a data.frame}

\item{value}{a character string or `NULL` to remove the group
For data frames, it could also be a named list or a character vector
of same length as the number of columns in `x`.}

\item{.data}{a data frame}

\item{...}{name-value pairs of variable groups (see examples)}

\item{.groups}{variable groups to be applied to the data.frame,
using the same syntax as `value` in `var_group(df) <- value`.}

\item{.strict}{should an error be returned if some groups
doesn't correspond to a column of `x`?}

\item{unlist}{for data frames, return a named vector instead of a list}
}
\value{
`set_variable_groups()` will return an updated copy of `.data`.
}
\description{
Get / Set a variable group
}
\details{
For data frames, if `value` is a named list, only elements whose name will
  match a column of the data frame will be taken into account. If `value`
  is a character vector, groups should in the same order as the columns of the
  data.frame.
}
\note{
`set_variable_groups()` could be used with \pkg{dplyr} syntax.
}
\examples{
var_group(iris$Sepal.Length)
var_group(iris$Sepal.Length) <- 'length group'
\dontrun{
 View(iris)
}
# To remove a variable group
var_group(iris$Sepal.Length) <- NULL
# To change several variable groups at once
var_group(iris) <- c(
  "length group", "width group", "length group",
  "width group", "species"
)
var_group(iris)
var_group(iris) <- list(
  Petal.Width = "width group",
  Petal.Length = "length group"
)
var_group(iris)
var_group(iris, unlist = TRUE)

if (require(dplyr)) {
  # adding some variable groups
  df <- tibble(s1 = c("M", "M", "F"), s2 = c(1, 1, 2)) \%>\%
    set_variable_groups(s1 = "demography", s2 = "group1")
  var_group(df)

  # removing a variable group
  df <- df \%>\% set_variable_groups(s2 = NULL)
  var_group(df$s2)

  # Set groups from dictionary, e.g. as read from external file
  # One description is missing, one has no match
  description = tibble(
    name = c(
      "Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width",
      "Something"),
    group = c(
      "length group", "width group",  "length group", "width group",
      "something")
  )
  var_groups <- setNames(as.list(description$group), description$name)
  iris_groupled <- iris \%>\%
    set_variable_groups(.groups = var_groups, .strict = FALSE)
  var_group(iris_groupled)

  # defining variable groups derived from variable names
  if (require(snakecase)) {
    iris <- iris \%>\%
      set_variable_groups(.groups = to_sentence_case(names(iris)))
    var_group(iris)
  }
}

}
